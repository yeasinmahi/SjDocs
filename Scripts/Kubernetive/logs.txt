
==> Audit <==
|---------|--------------------------------|----------|--------|---------|---------------------|---------------------|
| Command |              Args              | Profile  |  User  | Version |     Start Time      |      End Time       |
|---------|--------------------------------|----------|--------|---------|---------------------|---------------------|
| start   |                                | minikube | yeasin | v1.33.1 | 07 Jun 24 10:05 +06 |                     |
| start   |                                | minikube | yeasin | v1.33.1 | 07 Jun 24 12:59 +06 |                     |
| start   |                                | minikube | yeasin | v1.33.1 | 07 Jun 24 14:13 +06 | 07 Jun 24 14:15 +06 |
| start   | --driver=virtualbox            | minikube | yeasin | v1.33.1 | 07 Jun 24 14:16 +06 |                     |
| start   | --driver=virtualbox -n 3       | minibox  | yeasin | v1.33.1 | 07 Jun 24 14:18 +06 |                     |
|         | --container-runtime=containerd |          |        |         |                     |                     |
|         | --cni=calico -p minibox        |          |        |         |                     |                     |
| start   | --driver=virtualbox -n 3       | minibox  | yeasin | v1.33.1 | 07 Jun 24 14:23 +06 |                     |
|         | --container-runtime=containerd |          |        |         |                     |                     |
|         | --cni=calico -p minibox        |          |        |         |                     |                     |
| start   | --driver=docker -n 3           | minibox  | yeasin | v1.33.1 | 07 Jun 24 15:51 +06 | 07 Jun 24 16:01 +06 |
|         | --container-runtime=containerd |          |        |         |                     |                     |
|         | --cni=calico -p minibox        |          |        |         |                     |                     |
| start   |                                | minikube | yeasin | v1.33.1 | 10 Jun 24 11:26 +06 |                     |
| start   |                                | minikube | yeasin | v1.33.1 | 10 Jun 24 11:28 +06 |                     |
| start   |                                | minikube | yeasin | v1.33.1 | 10 Jun 24 13:16 +06 |                     |
|---------|--------------------------------|----------|--------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2024/06/10 13:16:11
Running on machine: DESKTOP-2CS3S1Q
Binary: Built with gc go1.22.1 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0610 13:16:11.093068   11956 out.go:291] Setting OutFile to fd 1 ...
I0610 13:16:11.093505   11956 out.go:304] Setting ErrFile to fd 2...
I0610 13:16:11.093697   11956 root.go:338] Updating PATH: /home/yeasin/.minikube/bin
W0610 13:16:11.094599   11956 root.go:314] Error reading config file at /home/yeasin/.minikube/config/config.json: open /home/yeasin/.minikube/config/config.json: no such file or directory
I0610 13:16:11.096501   11956 out.go:298] Setting JSON to false
I0610 13:16:11.105830   11956 start.go:129] hostinfo: {"hostname":"DESKTOP-2CS3S1Q","uptime":2622,"bootTime":1718001149,"procs":49,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"22.04","kernelVersion":"5.15.146.1-microsoft-standard-WSL2","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"guest","hostId":"75d2be82-00c8-4207-8ba1-cf9b7553f6e1"}
I0610 13:16:11.105882   11956 start.go:139] virtualization:  guest
I0610 13:16:11.110058   11956 out.go:177] 😄  minikube v1.33.1 on Ubuntu 22.04 (amd64)
I0610 13:16:11.114530   11956 notify.go:220] Checking for updates...
I0610 13:16:11.114832   11956 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0610 13:16:11.115231   11956 driver.go:392] Setting default libvirt URI to qemu:///system
I0610 13:16:11.227463   11956 docker.go:122] docker version: linux-26.1.1:Docker Desktop
I0610 13:16:11.227538   11956 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0610 13:16:11.750866   11956 info.go:266] docker info: {ID:30d5330e-f73c-45d8-a1af-e8da80418b20 Containers:4 ContainersRunning:1 ContainersPaused:0 ContainersStopped:3 Images:2 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:69 OomKillDisable:true NGoroutines:87 SystemTime:2024-06-10 07:16:11.726920368 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:14 KernelVersion:5.15.146.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:6 MemTotal:4039626752 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///var/run/docker-cli.sock] ExperimentalBuild:false ServerVersion:26.1.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.14.0-desktop.1] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.27.0-desktop.2] map[Name:debug Path:/usr/local/lib/docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.29] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.23] map[Name:feedback Path:/usr/local/lib/docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.1.0] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Err:failed to fetch metadata: fork/exec /usr/local/lib/docker/cli-plugins/docker-scan: no such file or directory Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.8.0]] Warnings:<nil>}}
I0610 13:16:11.752414   11956 docker.go:295] overlay module found
I0610 13:16:11.754988   11956 out.go:177] ✨  Using the docker driver based on existing profile
I0610 13:16:11.757394   11956 start.go:297] selected driver: docker
I0610 13:16:11.757401   11956 start.go:901] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.67.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/yeasin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0610 13:16:11.757485   11956 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0610 13:16:11.757548   11956 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0610 13:16:11.977610   11956 info.go:266] docker info: {ID:30d5330e-f73c-45d8-a1af-e8da80418b20 Containers:4 ContainersRunning:1 ContainersPaused:0 ContainersStopped:3 Images:2 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:69 OomKillDisable:true NGoroutines:87 SystemTime:2024-06-10 07:16:11.965566588 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:14 KernelVersion:5.15.146.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:6 MemTotal:4039626752 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///var/run/docker-cli.sock] ExperimentalBuild:false ServerVersion:26.1.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:e377cd56a71523140ca6ae87e30244719194a521 Expected:e377cd56a71523140ca6ae87e30244719194a521} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.14.0-desktop.1] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.27.0-desktop.2] map[Name:debug Path:/usr/local/lib/docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.29] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.23] map[Name:feedback Path:/usr/local/lib/docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.1.0] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Err:failed to fetch metadata: fork/exec /usr/local/lib/docker/cli-plugins/docker-scan: no such file or directory Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.8.0]] Warnings:<nil>}}
I0610 13:16:11.981359   11956 cni.go:84] Creating CNI manager for ""
I0610 13:16:11.981746   11956 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0610 13:16:11.981796   11956 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.67.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/yeasin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0610 13:16:11.983567   11956 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0610 13:16:11.985094   11956 cache.go:121] Beginning downloading kic base image for docker with docker
I0610 13:16:11.986667   11956 out.go:177] 🚜  Pulling base image v0.0.44 ...
I0610 13:16:11.988217   11956 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0610 13:16:11.988322   11956 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon
I0610 13:16:11.988821   11956 preload.go:147] Found local preload: /home/yeasin/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4
I0610 13:16:11.988831   11956 cache.go:56] Caching tarball of preloaded images
I0610 13:16:11.990145   11956 preload.go:173] Found /home/yeasin/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0610 13:16:11.990158   11956 cache.go:59] Finished verifying existence of preloaded tar for v1.30.0 on docker
I0610 13:16:11.990252   11956 profile.go:143] Saving config to /home/yeasin/.minikube/profiles/minikube/config.json ...
I0610 13:16:12.033266   11956 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e to local cache
I0610 13:16:12.033976   11956 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local cache directory
I0610 13:16:12.036018   11956 image.go:66] Found gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local cache directory, skipping pull
I0610 13:16:12.036024   11956 image.go:105] gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e exists in cache, skipping pull
I0610 13:16:12.036033   11956 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e as a tarball
I0610 13:16:12.036036   11956 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e from local cache
I0610 13:16:28.908490   11956 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e from cached tarball
I0610 13:16:28.909355   11956 cache.go:194] Successfully downloaded all kic artifacts
I0610 13:16:28.910779   11956 start.go:360] acquireMachinesLock for minikube: {Name:mk9c7347245b094121fa96db59ba87c5d9905c1a Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0610 13:16:28.911831   11956 start.go:364] duration metric: took 572.109µs to acquireMachinesLock for "minikube"
I0610 13:16:28.912412   11956 start.go:96] Skipping create...Using existing machine configuration
I0610 13:16:28.912772   11956 fix.go:54] fixHost starting: 
I0610 13:16:28.914134   11956 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0610 13:16:28.961654   11956 fix.go:112] recreateIfNeeded on minikube: state=Running err=<nil>
W0610 13:16:28.961898   11956 fix.go:138] unexpected machine state, will restart: <nil>
I0610 13:16:28.967347   11956 out.go:177] 🏃  Updating the running docker "minikube" container ...
I0610 13:16:28.969311   11956 machine.go:94] provisionDockerMachine start ...
I0610 13:16:28.970022   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:29.009822   11956 main.go:141] libmachine: Using SSH client type: native
I0610 13:16:29.012100   11956 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 4421 <nil> <nil>}
I0610 13:16:29.012110   11956 main.go:141] libmachine: About to run SSH command:
hostname
I0610 13:16:29.202859   11956 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0610 13:16:29.203234   11956 ubuntu.go:169] provisioning hostname "minikube"
I0610 13:16:29.203491   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:29.245454   11956 main.go:141] libmachine: Using SSH client type: native
I0610 13:16:29.245599   11956 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 4421 <nil> <nil>}
I0610 13:16:29.245605   11956 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0610 13:16:29.425383   11956 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0610 13:16:29.425521   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:29.453743   11956 main.go:141] libmachine: Using SSH client type: native
I0610 13:16:29.453881   11956 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 4421 <nil> <nil>}
I0610 13:16:29.453890   11956 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0610 13:16:29.603586   11956 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0610 13:16:29.603844   11956 ubuntu.go:175] set auth options {CertDir:/home/yeasin/.minikube CaCertPath:/home/yeasin/.minikube/certs/ca.pem CaPrivateKeyPath:/home/yeasin/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/yeasin/.minikube/machines/server.pem ServerKeyPath:/home/yeasin/.minikube/machines/server-key.pem ClientKeyPath:/home/yeasin/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/yeasin/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/yeasin/.minikube}
I0610 13:16:29.603863   11956 ubuntu.go:177] setting up certificates
I0610 13:16:29.603965   11956 provision.go:84] configureAuth start
I0610 13:16:29.604340   11956 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0610 13:16:29.637388   11956 provision.go:143] copyHostCerts
I0610 13:16:29.639367   11956 exec_runner.go:144] found /home/yeasin/.minikube/ca.pem, removing ...
I0610 13:16:29.639404   11956 exec_runner.go:203] rm: /home/yeasin/.minikube/ca.pem
I0610 13:16:29.639770   11956 exec_runner.go:151] cp: /home/yeasin/.minikube/certs/ca.pem --> /home/yeasin/.minikube/ca.pem (1078 bytes)
I0610 13:16:29.641357   11956 exec_runner.go:144] found /home/yeasin/.minikube/cert.pem, removing ...
I0610 13:16:29.641365   11956 exec_runner.go:203] rm: /home/yeasin/.minikube/cert.pem
I0610 13:16:29.641433   11956 exec_runner.go:151] cp: /home/yeasin/.minikube/certs/cert.pem --> /home/yeasin/.minikube/cert.pem (1119 bytes)
I0610 13:16:29.642407   11956 exec_runner.go:144] found /home/yeasin/.minikube/key.pem, removing ...
I0610 13:16:29.642414   11956 exec_runner.go:203] rm: /home/yeasin/.minikube/key.pem
I0610 13:16:29.642494   11956 exec_runner.go:151] cp: /home/yeasin/.minikube/certs/key.pem --> /home/yeasin/.minikube/key.pem (1675 bytes)
I0610 13:16:29.642929   11956 provision.go:117] generating server cert: /home/yeasin/.minikube/machines/server.pem ca-key=/home/yeasin/.minikube/certs/ca.pem private-key=/home/yeasin/.minikube/certs/ca-key.pem org=yeasin.minikube san=[127.0.0.1 192.168.67.2 localhost minikube]
I0610 13:16:29.866641   11956 provision.go:177] copyRemoteCerts
I0610 13:16:29.867157   11956 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0610 13:16:29.867221   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:29.898061   11956 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:4421 SSHKeyPath:/home/yeasin/.minikube/machines/minikube/id_rsa Username:docker}
I0610 13:16:30.016605   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I0610 13:16:30.048005   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/machines/server.pem --> /etc/docker/server.pem (1180 bytes)
I0610 13:16:30.074107   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0610 13:16:30.102793   11956 provision.go:87] duration metric: took 498.815652ms to configureAuth
I0610 13:16:30.102907   11956 ubuntu.go:193] setting minikube options for container-runtime
I0610 13:16:30.103516   11956 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0610 13:16:30.103602   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:30.133862   11956 main.go:141] libmachine: Using SSH client type: native
I0610 13:16:30.134043   11956 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 4421 <nil> <nil>}
I0610 13:16:30.134049   11956 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0610 13:16:30.287371   11956 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0610 13:16:30.287649   11956 ubuntu.go:71] root file system type: overlay
I0610 13:16:30.287875   11956 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0610 13:16:30.287929   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:30.316219   11956 main.go:141] libmachine: Using SSH client type: native
I0610 13:16:30.316358   11956 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 4421 <nil> <nil>}
I0610 13:16:30.316405   11956 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0610 13:16:30.485100   11956 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0610 13:16:30.485214   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:30.512552   11956 main.go:141] libmachine: Using SSH client type: native
I0610 13:16:30.512744   11956 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 4421 <nil> <nil>}
I0610 13:16:30.512755   11956 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0610 13:16:30.665624   11956 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0610 13:16:30.665637   11956 machine.go:97] duration metric: took 1.6963121s to provisionDockerMachine
I0610 13:16:30.665658   11956 start.go:293] postStartSetup for "minikube" (driver="docker")
I0610 13:16:30.665667   11956 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0610 13:16:30.665751   11956 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0610 13:16:30.665781   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:30.697420   11956 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:4421 SSHKeyPath:/home/yeasin/.minikube/machines/minikube/id_rsa Username:docker}
I0610 13:16:30.807918   11956 ssh_runner.go:195] Run: cat /etc/os-release
I0610 13:16:30.814761   11956 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0610 13:16:30.814779   11956 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0610 13:16:30.814785   11956 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0610 13:16:30.814790   11956 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I0610 13:16:30.814816   11956 filesync.go:126] Scanning /home/yeasin/.minikube/addons for local assets ...
I0610 13:16:30.815286   11956 filesync.go:126] Scanning /home/yeasin/.minikube/files for local assets ...
I0610 13:16:30.815572   11956 start.go:296] duration metric: took 149.887709ms for postStartSetup
I0610 13:16:30.815686   11956 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0610 13:16:30.815715   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:30.839464   11956 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:4421 SSHKeyPath:/home/yeasin/.minikube/machines/minikube/id_rsa Username:docker}
I0610 13:16:30.960399   11956 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0610 13:16:30.967013   11956 fix.go:56] duration metric: took 2.054303094s for fixHost
I0610 13:16:30.967027   11956 start.go:83] releasing machines lock for "minikube", held for 2.055185608s
I0610 13:16:30.967098   11956 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0610 13:16:30.996341   11956 ssh_runner.go:195] Run: cat /version.json
I0610 13:16:30.996421   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:30.996600   11956 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0610 13:16:30.997006   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0610 13:16:31.029046   11956 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:4421 SSHKeyPath:/home/yeasin/.minikube/machines/minikube/id_rsa Username:docker}
I0610 13:16:31.034380   11956 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:4421 SSHKeyPath:/home/yeasin/.minikube/machines/minikube/id_rsa Username:docker}
I0610 13:16:31.128593   11956 ssh_runner.go:195] Run: systemctl --version
I0610 13:16:31.496154   11956 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0610 13:16:31.506453   11956 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0610 13:16:31.553647   11956 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0610 13:16:31.553694   11956 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0610 13:16:31.564354   11956 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0610 13:16:31.564408   11956 start.go:494] detecting cgroup driver to use...
I0610 13:16:31.564726   11956 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0610 13:16:31.565817   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0610 13:16:31.589866   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0610 13:16:31.604857   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0610 13:16:31.621252   11956 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I0610 13:16:31.621293   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0610 13:16:31.640361   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0610 13:16:31.651942   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0610 13:16:31.663803   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0610 13:16:31.679018   11956 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0610 13:16:31.690866   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0610 13:16:31.702423   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0610 13:16:31.713519   11956 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0610 13:16:31.724626   11956 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0610 13:16:31.736215   11956 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0610 13:16:31.747557   11956 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0610 13:16:31.978188   11956 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0610 13:16:32.526692   11956 start.go:494] detecting cgroup driver to use...
I0610 13:16:32.526729   11956 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0610 13:16:32.526847   11956 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0610 13:16:32.540816   11956 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0610 13:16:32.540862   11956 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0610 13:16:32.554729   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0610 13:16:32.576731   11956 ssh_runner.go:195] Run: which cri-dockerd
I0610 13:16:32.581281   11956 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0610 13:16:32.591393   11956 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0610 13:16:32.612221   11956 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0610 13:16:32.714202   11956 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0610 13:16:32.866995   11956 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I0610 13:16:32.867518   11956 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0610 13:16:32.891535   11956 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0610 13:16:32.996458   11956 ssh_runner.go:195] Run: sudo systemctl restart docker
I0610 13:16:34.010994   11956 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.014510685s)
I0610 13:16:34.011045   11956 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0610 13:16:34.026332   11956 ssh_runner.go:195] Run: sudo systemctl stop cri-docker.socket
I0610 13:16:34.047640   11956 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0610 13:16:34.063822   11956 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0610 13:16:34.164212   11956 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0610 13:16:34.260422   11956 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0610 13:16:34.349967   11956 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0610 13:16:34.366380   11956 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0610 13:16:34.380893   11956 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0610 13:16:34.482103   11956 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0610 13:16:34.714745   11956 start.go:541] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0610 13:16:34.714897   11956 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0610 13:16:34.719917   11956 start.go:562] Will wait 60s for crictl version
I0610 13:16:34.719961   11956 ssh_runner.go:195] Run: which crictl
I0610 13:16:34.726969   11956 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0610 13:16:34.850201   11956 start.go:578] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  26.1.1
RuntimeApiVersion:  v1
I0610 13:16:34.850262   11956 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0610 13:16:34.955046   11956 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0610 13:16:34.987160   11956 out.go:204] 🐳  Preparing Kubernetes v1.30.0 on Docker 26.1.1 ...
I0610 13:16:34.987806   11956 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0610 13:16:35.028233   11956 ssh_runner.go:195] Run: grep 192.168.67.1	host.minikube.internal$ /etc/hosts
I0610 13:16:35.034013   11956 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.67.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0610 13:16:35.047522   11956 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0610 13:16:35.077392   11956 kubeadm.go:877] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.67.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/yeasin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0610 13:16:35.078498   11956 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0610 13:16:35.078568   11956 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0610 13:16:35.102667   11956 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
<none>:<none>
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
<none>:<none>
<none>:<none>
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0610 13:16:35.102687   11956 docker.go:615] Images already preloaded, skipping extraction
I0610 13:16:35.102924   11956 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0610 13:16:35.124202   11956 docker.go:685] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
<none>:<none>
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
<none>:<none>
<none>:<none>
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0610 13:16:35.124345   11956 cache_images.go:84] Images are preloaded, skipping loading
I0610 13:16:35.124370   11956 kubeadm.go:928] updating node { 192.168.67.2 8443 v1.30.0 docker true true} ...
I0610 13:16:35.125001   11956 kubeadm.go:940] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.30.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.67.2

[Install]
 config:
{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0610 13:16:35.125071   11956 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0610 13:16:35.306155   11956 cni.go:84] Creating CNI manager for ""
I0610 13:16:35.306212   11956 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0610 13:16:35.306280   11956 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0610 13:16:35.306313   11956 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.67.2 APIServerPort:8443 KubernetesVersion:v1.30.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.67.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.67.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0610 13:16:35.306841   11956 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.67.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.67.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.67.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.30.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0610 13:16:35.306943   11956 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.30.0
I0610 13:16:35.318390   11956 binaries.go:44] Found k8s binaries, skipping transfer
I0610 13:16:35.318436   11956 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0610 13:16:35.328673   11956 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0610 13:16:35.347430   11956 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0610 13:16:35.367276   11956 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2150 bytes)
I0610 13:16:35.392583   11956 ssh_runner.go:195] Run: grep 192.168.67.2	control-plane.minikube.internal$ /etc/hosts
I0610 13:16:35.397758   11956 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.67.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0610 13:16:35.410656   11956 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0610 13:16:35.493443   11956 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0610 13:16:35.509603   11956 certs.go:68] Setting up /home/yeasin/.minikube/profiles/minikube for IP: 192.168.67.2
I0610 13:16:35.509628   11956 certs.go:194] generating shared ca certs ...
I0610 13:16:35.509658   11956 certs.go:226] acquiring lock for ca certs: {Name:mk8aac481aa569288fac4b67377876e6a821747b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0610 13:16:35.510342   11956 certs.go:235] skipping valid "minikubeCA" ca cert: /home/yeasin/.minikube/ca.key
I0610 13:16:35.517510   11956 certs.go:235] skipping valid "proxyClientCA" ca cert: /home/yeasin/.minikube/proxy-client-ca.key
I0610 13:16:35.517660   11956 certs.go:256] generating profile certs ...
I0610 13:16:35.517904   11956 certs.go:359] skipping valid signed profile cert regeneration for "minikube-user": /home/yeasin/.minikube/profiles/minikube/client.key
I0610 13:16:35.526397   11956 certs.go:359] skipping valid signed profile cert regeneration for "minikube": /home/yeasin/.minikube/profiles/minikube/apiserver.key.583c145e
I0610 13:16:35.527896   11956 certs.go:359] skipping valid signed profile cert regeneration for "aggregator": /home/yeasin/.minikube/profiles/minikube/proxy-client.key
I0610 13:16:35.528745   11956 certs.go:484] found cert: /home/yeasin/.minikube/certs/ca-key.pem (1675 bytes)
I0610 13:16:35.528798   11956 certs.go:484] found cert: /home/yeasin/.minikube/certs/ca.pem (1078 bytes)
I0610 13:16:35.528902   11956 certs.go:484] found cert: /home/yeasin/.minikube/certs/cert.pem (1119 bytes)
I0610 13:16:35.528926   11956 certs.go:484] found cert: /home/yeasin/.minikube/certs/key.pem (1675 bytes)
I0610 13:16:35.535518   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0610 13:16:35.574049   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0610 13:16:35.615694   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0610 13:16:35.654395   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0610 13:16:35.693717   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0610 13:16:35.724715   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0610 13:16:35.761433   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0610 13:16:35.792977   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0610 13:16:35.824447   11956 ssh_runner.go:362] scp /home/yeasin/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0610 13:16:35.855317   11956 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0610 13:16:35.880337   11956 ssh_runner.go:195] Run: openssl version
I0610 13:16:35.891326   11956 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0610 13:16:35.907907   11956 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0610 13:16:35.913458   11956 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jun  7 04:17 /usr/share/ca-certificates/minikubeCA.pem
I0610 13:16:35.913498   11956 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0610 13:16:35.922911   11956 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0610 13:16:35.937454   11956 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0610 13:16:35.944232   11956 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0610 13:16:35.953791   11956 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0610 13:16:35.961800   11956 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0610 13:16:35.971047   11956 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0610 13:16:35.980104   11956 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0610 13:16:35.990422   11956 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0610 13:16:36.001835   11956 kubeadm.go:391] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.67.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/yeasin:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0610 13:16:36.001996   11956 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0610 13:16:36.038182   11956 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0610 13:16:36.050956   11956 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0610 13:16:36.062713   11956 kubeadm.go:213] ignoring SystemVerification for kubeadm because of docker driver
I0610 13:16:36.062769   11956 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0610 13:16:36.073719   11956 kubeadm.go:154] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0610 13:16:36.073728   11956 kubeadm.go:156] found existing configuration files:

I0610 13:16:36.073767   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0610 13:16:36.084327   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0610 13:16:36.084384   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0610 13:16:36.098303   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0610 13:16:36.111693   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0610 13:16:36.111762   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0610 13:16:36.126025   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0610 13:16:36.137116   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0610 13:16:36.137155   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0610 13:16:36.150854   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0610 13:16:36.163675   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0610 13:16:36.163713   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0610 13:16:36.176480   11956 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0610 13:16:36.338937   11956 kubeadm.go:309] [init] Using Kubernetes version: v1.30.0
I0610 13:16:36.338973   11956 kubeadm.go:309] [preflight] Running pre-flight checks
I0610 13:16:36.463212   11956 kubeadm.go:309] [preflight] Pulling images required for setting up a Kubernetes cluster
I0610 13:16:36.463293   11956 kubeadm.go:309] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0610 13:16:36.463407   11956 kubeadm.go:309] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0610 13:16:36.767720   11956 kubeadm.go:309] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0610 13:16:36.769983   11956 out.go:204]     ▪ Generating certificates and keys ...
I0610 13:16:36.770103   11956 kubeadm.go:309] [certs] Using existing ca certificate authority
I0610 13:16:36.770147   11956 kubeadm.go:309] [certs] Using existing apiserver certificate and key on disk
I0610 13:16:36.772059   11956 kubeadm.go:309] 	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
I0610 13:16:36.772135   11956 kubeadm.go:309] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0610 13:16:36.772189   11956 kubeadm.go:309] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I0610 13:16:36.772415   11956 kubeadm.go:309] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I0610 13:16:36.772480   11956 kubeadm.go:309] To see the stack trace of this error execute with --v=5 or higher
W0610 13:16:36.773001   11956 out.go:239] 💢  initialization failed, will try again: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.30.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

I0610 13:16:36.773145   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I0610 13:16:40.626500   11956 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": (3.853337589s)
I0610 13:16:40.626562   11956 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0610 13:16:40.639016   11956 kubeadm.go:213] ignoring SystemVerification for kubeadm because of docker driver
I0610 13:16:40.639097   11956 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0610 13:16:40.648558   11956 kubeadm.go:154] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0610 13:16:40.648567   11956 kubeadm.go:156] found existing configuration files:

I0610 13:16:40.648652   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0610 13:16:40.658134   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0610 13:16:40.658171   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0610 13:16:40.667686   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0610 13:16:40.677184   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0610 13:16:40.677239   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0610 13:16:40.687337   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0610 13:16:40.697923   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0610 13:16:40.697981   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0610 13:16:40.709245   11956 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0610 13:16:40.719254   11956 kubeadm.go:162] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0610 13:16:40.719293   11956 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0610 13:16:40.728701   11956 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0610 13:16:40.782853   11956 kubeadm.go:309] [init] Using Kubernetes version: v1.30.0
I0610 13:16:40.782913   11956 kubeadm.go:309] [preflight] Running pre-flight checks
I0610 13:16:40.894969   11956 kubeadm.go:309] [preflight] Pulling images required for setting up a Kubernetes cluster
I0610 13:16:40.895059   11956 kubeadm.go:309] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0610 13:16:40.895122   11956 kubeadm.go:309] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0610 13:16:41.121330   11956 kubeadm.go:309] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0610 13:16:41.123613   11956 out.go:204]     ▪ Generating certificates and keys ...
I0610 13:16:41.123708   11956 kubeadm.go:309] [certs] Using existing ca certificate authority
I0610 13:16:41.123754   11956 kubeadm.go:309] [certs] Using existing apiserver certificate and key on disk
I0610 13:16:41.125659   11956 kubeadm.go:309] 	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
I0610 13:16:41.125730   11956 kubeadm.go:309] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0610 13:16:41.125781   11956 kubeadm.go:309] 	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
I0610 13:16:41.125960   11956 kubeadm.go:309] error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
I0610 13:16:41.126000   11956 kubeadm.go:309] To see the stack trace of this error execute with --v=5 or higher
I0610 13:16:41.126038   11956 kubeadm.go:393] duration metric: took 5.124232648s to StartCluster
I0610 13:16:41.126320   11956 cri.go:54] listing CRI containers in root : {State:all Name:kube-apiserver Namespaces:[]}
I0610 13:16:41.126361   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-apiserver
I0610 13:16:41.165523   11956 cri.go:89] found id: ""
I0610 13:16:41.165732   11956 logs.go:276] 0 containers: []
W0610 13:16:41.165745   11956 logs.go:278] No container was found matching "kube-apiserver"
I0610 13:16:41.165749   11956 cri.go:54] listing CRI containers in root : {State:all Name:etcd Namespaces:[]}
I0610 13:16:41.165811   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=etcd
I0610 13:16:41.206513   11956 cri.go:89] found id: ""
I0610 13:16:41.206524   11956 logs.go:276] 0 containers: []
W0610 13:16:41.206532   11956 logs.go:278] No container was found matching "etcd"
I0610 13:16:41.206535   11956 cri.go:54] listing CRI containers in root : {State:all Name:coredns Namespaces:[]}
I0610 13:16:41.206578   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=coredns
I0610 13:16:41.245181   11956 cri.go:89] found id: ""
I0610 13:16:41.245211   11956 logs.go:276] 0 containers: []
W0610 13:16:41.245218   11956 logs.go:278] No container was found matching "coredns"
I0610 13:16:41.245222   11956 cri.go:54] listing CRI containers in root : {State:all Name:kube-scheduler Namespaces:[]}
I0610 13:16:41.245282   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-scheduler
I0610 13:16:41.286030   11956 cri.go:89] found id: ""
I0610 13:16:41.286073   11956 logs.go:276] 0 containers: []
W0610 13:16:41.286082   11956 logs.go:278] No container was found matching "kube-scheduler"
I0610 13:16:41.286086   11956 cri.go:54] listing CRI containers in root : {State:all Name:kube-proxy Namespaces:[]}
I0610 13:16:41.286123   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-proxy
I0610 13:16:41.330723   11956 cri.go:89] found id: ""
I0610 13:16:41.330734   11956 logs.go:276] 0 containers: []
W0610 13:16:41.330741   11956 logs.go:278] No container was found matching "kube-proxy"
I0610 13:16:41.330745   11956 cri.go:54] listing CRI containers in root : {State:all Name:kube-controller-manager Namespaces:[]}
I0610 13:16:41.330823   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kube-controller-manager
I0610 13:16:41.369631   11956 cri.go:89] found id: ""
I0610 13:16:41.369645   11956 logs.go:276] 0 containers: []
W0610 13:16:41.369651   11956 logs.go:278] No container was found matching "kube-controller-manager"
I0610 13:16:41.369656   11956 cri.go:54] listing CRI containers in root : {State:all Name:kindnet Namespaces:[]}
I0610 13:16:41.369696   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=kindnet
I0610 13:16:41.408257   11956 cri.go:89] found id: ""
I0610 13:16:41.408272   11956 logs.go:276] 0 containers: []
W0610 13:16:41.408277   11956 logs.go:278] No container was found matching "kindnet"
I0610 13:16:41.408281   11956 cri.go:54] listing CRI containers in root : {State:all Name:storage-provisioner Namespaces:[]}
I0610 13:16:41.408318   11956 ssh_runner.go:195] Run: sudo crictl ps -a --quiet --name=storage-provisioner
I0610 13:16:41.444197   11956 cri.go:89] found id: ""
I0610 13:16:41.444207   11956 logs.go:276] 0 containers: []
W0610 13:16:41.444213   11956 logs.go:278] No container was found matching "storage-provisioner"
I0610 13:16:41.444220   11956 logs.go:123] Gathering logs for Docker ...
I0610 13:16:41.444228   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0610 13:16:41.482480   11956 logs.go:123] Gathering logs for container status ...
I0610 13:16:41.482497   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0610 13:16:41.530768   11956 logs.go:123] Gathering logs for kubelet ...
I0610 13:16:41.530781   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0610 13:16:41.547156   11956 logs.go:123] Gathering logs for dmesg ...
I0610 13:16:41.547169   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0610 13:16:41.567070   11956 logs.go:123] Gathering logs for describe nodes ...
I0610 13:16:41.567085   11956 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
W0610 13:16:41.759764   11956 logs.go:130] failed describe nodes: command: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig": Process exited with status 1
stdout:

stderr:
E0610 07:16:41.752067    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.752584    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.754557    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.754921    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.756307    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?
 output: 
** stderr ** 
E0610 07:16:41.752067    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.752584    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.754557    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.754921    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:41.756307    5514 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?

** /stderr **
W0610 13:16:41.759830   11956 out.go:364] Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.30.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher
W0610 13:16:41.759866   11956 out.go:239] 
W0610 13:16:41.759967   11956 out.go:239] 💣  Error starting cluster: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.30.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W0610 13:16:41.760002   11956 out.go:239] 
W0610 13:16:41.762556   11956 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0610 13:16:41.766810   11956 out.go:177] 
W0610 13:16:41.768373   11956 out.go:239] ❌  Exiting due to GUEST_START: failed to start node: wait: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.30.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables": Process exited with status 1
stdout:
[init] Using Kubernetes version: v1.30.0
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/var/lib/minikube/certs"
[certs] Using existing ca certificate authority
[certs] Using existing apiserver certificate and key on disk

stderr:
	[WARNING Swap]: swap is supported for cgroup v2 only; the NodeSwap feature gate of the kubelet is beta but disabled by default
	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
	[WARNING DirAvailable--var-lib-minikube-etcd]: /var/lib/minikube/etcd is not empty
error execution phase certs/apiserver-kubelet-client: [certs] certificate apiserver-kubelet-client not signed by CA certificate ca: x509: certificate signed by unknown authority (possibly because of "crypto/rsa: verification error" while trying to verify candidate authority certificate "minikubeCA")
To see the stack trace of this error execute with --v=5 or higher

W0610 13:16:41.768416   11956 out.go:239] 
W0610 13:16:41.769206   11956 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0610 13:16:41.771735   11956 out.go:177] 


==> Docker <==
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox format\": invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"format\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"format\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDformat\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"format\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox endpoint=\"/var/run/cri-dockerd.sock\": invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=info msg="Both sandbox container and checkpoint could not be found with id \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\". Proceed without further sandbox information."
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="CNI failed to delete loopback network: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\"Failed to delete corrupt checkpoint for sandboxpodSandboxIDendpoint=\"/var/run/cri-dockerd.sock\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Error deleting network when building cni runtime conf: could not retrieve port mappings: invalid key: \"endpoint=\\\"/var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""
Jun 10 07:16:40 minikube cri-dockerd[3732]: time="2024-06-10T07:16:40Z" level=error msg="Failed to delete corrupt checkpoint for sandbox URL=\"unix:///var/run/cri-dockerd.sock\": invalid key: \"URL=\\\"unix:///var/run/cri-dockerd.sock\\\"\""


==> container status <==
CONTAINER           IMAGE               CREATED             STATE               NAME                ATTEMPT             POD ID              POD


==> describe nodes <==
command /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" failed with error: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.30.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig": Process exited with status 1
stdout:

stderr:
E0610 07:16:55.277453    5633 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:55.278034    5633 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:55.279523    5633 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:55.279980    5633 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
E0610 07:16:55.281121    5633 memcache.go:265] couldn't get current server API group list: Get "https://localhost:8443/api?timeout=32s": dial tcp [::1]:8443: connect: connection refused
The connection to the server localhost:8443 was refused - did you specify the right host or port?


==> dmesg <==
[  +0.000466] FS-Cache: O-cookie d=00000000545f4979{9P.session} n=00000000376c2801
[  +0.000425] FS-Cache: O-key=[10] '34323934393337353530'
[  +0.000335] FS-Cache: N-cookie c=0000001c [p=00000002 fl=2 nc=0 na=1]
[  +0.000605] FS-Cache: N-cookie d=00000000545f4979{9P.session} n=000000006bff47e1
[  +0.001853] FS-Cache: N-key=[10] '34323934393337353530'
[  +0.010647] WSL (2) ERROR: UtilCreateProcessAndWait:665: /bin/mount failed with 2
[  +0.001739] WSL (1) ERROR: UtilCreateProcessAndWait:687: /bin/mount failed with status 0xff00

[  +0.001517] WSL (1) ERROR: ConfigMountFsTab:2589: Processing fstab with mount -a failed.
[  +0.020815] WSL (1) ERROR: ConfigApplyWindowsLibPath:2537: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000004]  failed 2
[  +0.010406] WSL (3) ERROR: UtilCreateProcessAndWait:665: /bin/mount failed with 2
[  +0.011207] WSL (1) ERROR: UtilCreateProcessAndWait:687: /bin/mount failed with status 0xff00

[  +0.005601] WSL (4) ERROR: UtilCreateProcessAndWait:665: /bin/mount failed with 2
[  +0.001302] WSL (1) ERROR: UtilCreateProcessAndWait:687: /bin/mount failed with status 0xff00

[  +0.003987] WSL (5) ERROR: UtilCreateProcessAndWait:665: /bin/mount failed with 2
[  +0.004024] WSL (1) ERROR: UtilCreateProcessAndWait:687: /bin/mount failed with status 0xff00

[  +0.008370] WSL (6) ERROR: UtilCreateProcessAndWait:665: /bin/mount failed with 2
[  +0.001459] WSL (1) ERROR: UtilCreateProcessAndWait:687: /bin/mount failed with status 0xff00

[  +0.107434] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000703] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000455] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000590] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.019679] WSL (1) WARNING: /usr/share/zoneinfo/Asia/Dhaka not found. Is the tzdata package installed?
[  +1.214610] FS-Cache: Duplicate cookie detected
[  +0.000345] FS-Cache: O-cookie c=0000002a [p=00000002 fl=222 nc=0 na=1]
[  +0.000638] FS-Cache: O-cookie d=00000000545f4979{9P.session} n=0000000023260137
[  +0.001681] FS-Cache: O-key=[10] '34323934393337363933'
[  +0.000265] FS-Cache: N-cookie c=0000002b [p=00000002 fl=2 nc=0 na=1]
[  +0.000333] FS-Cache: N-cookie d=00000000545f4979{9P.session} n=0000000015c97bde
[  +0.000425] FS-Cache: N-key=[10] '34323934393337363933'
[  +0.004887] FS-Cache: Duplicate cookie detected
[  +0.000452] FS-Cache: O-cookie c=0000002c [p=00000002 fl=222 nc=0 na=1]
[  +0.000384] FS-Cache: O-cookie d=00000000545f4979{9P.session} n=000000009e5c6174
[  +0.000613] FS-Cache: O-key=[10] '34323934393337363934'
[  +0.000350] FS-Cache: N-cookie c=0000002d [p=00000002 fl=2 nc=0 na=1]
[  +0.000316] FS-Cache: N-cookie d=00000000545f4979{9P.session} n=000000001257972f
[  +0.000493] FS-Cache: N-key=[10] '34323934393337363934'
[  +0.154009] netlink: 'init': attribute type 4 has an invalid length.
[  +0.080784] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000708] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000979] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.001812] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +1.200916] FS-Cache: Duplicate cookie detected
[  +0.001320] FS-Cache: O-cookie c=00000038 [p=00000002 fl=222 nc=0 na=1]
[  +0.000460] FS-Cache: O-cookie d=00000000545f4979{9P.session} n=000000009c4c75d3
[  +0.000479] FS-Cache: O-key=[10] '34323934393337383338'
[  +0.000398] FS-Cache: N-cookie c=00000039 [p=00000002 fl=2 nc=0 na=1]
[  +0.000621] FS-Cache: N-cookie d=00000000545f4979{9P.session} n=000000001e173460
[  +0.000797] FS-Cache: N-key=[10] '34323934393337383338'
[  +0.157981] new mount options do not match the existing superblock, will be ignored
[  +0.201754] Failed to connect to bus: No such file or directory
[  +0.280216] Failed to connect to bus: No such file or directory
[  +0.503338] systemd-journald[47]: File /var/log/journal/75d2be8200c842078ba1cf9b7553f6e1/system.journal corrupted or uncleanly shut down, renaming and replacing.
[  +9.321321] WSL (2) ERROR: WaitForBootProcess:3335: /sbin/init failed to start within 10000
[  +0.010224] ms


==> kernel <==
 07:16:55 up 44 min,  0 users,  load average: 1.43, 0.57, 0.28
Linux minikube 5.15.146.1-microsoft-standard-WSL2 #1 SMP Thu Jan 11 04:09:03 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.4 LTS"


==> kubelet <==
Jun 10 07:16:35 minikube systemd[1]: Started kubelet: The Kubernetes Node Agent.
Jun 10 07:16:35 minikube kubelet[3908]: E0610 07:16:35.931101    3908 run.go:74] "command failed" err="failed to load kubelet config file, path: /var/lib/kubelet/config.yaml, error: failed to load Kubelet config file /var/lib/kubelet/config.yaml, error failed to read kubelet config file \"/var/lib/kubelet/config.yaml\", error: open /var/lib/kubelet/config.yaml: no such file or directory"
Jun 10 07:16:35 minikube systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Jun 10 07:16:35 minikube systemd[1]: kubelet.service: Failed with result 'exit-code'.
Jun 10 07:16:36 minikube systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 1.
Jun 10 07:16:36 minikube systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
Jun 10 07:16:36 minikube systemd[1]: Started kubelet: The Kubernetes Node Agent.
Jun 10 07:16:36 minikube kubelet[4120]: E0610 07:16:36.800103    4120 run.go:74] "command failed" err="failed to load kubelet config file, path: /var/lib/kubelet/config.yaml, error: failed to load Kubelet config file /var/lib/kubelet/config.yaml, error failed to read kubelet config file \"/var/lib/kubelet/config.yaml\", error: open /var/lib/kubelet/config.yaml: no such file or directory"
Jun 10 07:16:36 minikube systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
Jun 10 07:16:36 minikube systemd[1]: kubelet.service: Failed with result 'exit-code'.
Jun 10 07:16:36 minikube systemd[1]: Stopped kubelet: The Kubernetes Node Agent.

